diff --git a/node_modules/graph-tabs/src/graph-tabs.js b/node_modules/graph-tabs/src/graph-tabs.js
index 28ecaa8..7a2f22e 100644
--- a/node_modules/graph-tabs/src/graph-tabs.js
+++ b/node_modules/graph-tabs/src/graph-tabs.js
@@ -6,6 +6,10 @@ export default class GraphTabs {
     this.options = Object.assign(defaultOptions, options);
     this.selector = selector;
     this.tabs = document.querySelector(`[data-tabs="${selector}"]`);
+    this.tabsActiveInit = this.tabs.getAttribute('data-tabs-init-active') === 'true' ? true : false;
+    this.style = window.getComputedStyle(this.tabs.querySelector('.tabs__nav'));
+    this.isColumn = this.style.display === 'flex' && (this.style.flexDirection === 'column' || this.style.flexDirection === 'column-reverse');
+
     if (this.tabs) {
       this.tabList = this.tabs.querySelector('.tabs__nav');
       this.tabsBtns = this.tabList.querySelectorAll('.tabs__nav-btn');
@@ -49,10 +53,13 @@ export default class GraphTabs {
       el.classList.remove('tabs__panel--active');
     });
 
-    this.tabsBtns[0].classList.add('tabs__nav-btn--active');
-    this.tabsBtns[0].removeAttribute('tabindex');
-    this.tabsBtns[0].setAttribute('aria-selected', 'true');
-    this.tabsPanels[0].classList.add('tabs__panel--active');
+    if (this.tabsActiveInit) {
+      this.tabsBtns[0].classList.add('tabs__nav-btn--active');
+      this.tabsBtns[0].setAttribute('aria-selected', 'true');
+      this.tabsPanels[0].classList.add('tabs__panel--active');
+    } else {
+      this.tabsBtns[0].setAttribute('tabindex', 0);
+    }
   }
 
   events() {
@@ -70,18 +77,18 @@ export default class GraphTabs {
 
         let dir = null;
 
-        if (e.which === 37) {
+        if (e.which === (this.isColumn ? 38 : 37)) {
           dir = index - 1;
-        } else if (e.which === 39) {
+        } else if (e.which === (this.isColumn ? 40 : 39)) {
           dir = index + 1;
-        } else if (e.which === 40) {
-          dir = 'down';
+        } else if (e.which === (this.isColumn ? 39 : 40)) {
+          dir = 'openPanel';
         } else {
           dir = null;
         }
 
         if (dir !== null) {
-          if (dir === 'down') {
+          if (dir === 'openPanel') {
             this.tabsPanels[i].focus();
           } else if (this.tabsBtns[dir]) {
             this.switchTabs(this.tabsBtns[dir], e.currentTarget);
@@ -93,19 +100,19 @@ export default class GraphTabs {
 
   switchTabs(newTab, oldTab = this.tabs.querySelector('[aria-selected]')) {
     newTab.focus();
-    newTab.removeAttribute('tabindex');
+    newTab.setAttribute('tabindex', '0');
     newTab.setAttribute('aria-selected', 'true');
 
-    oldTab.removeAttribute('aria-selected');
-    oldTab.setAttribute('tabindex', '-1');
+    oldTab?.removeAttribute('aria-selected');
+    oldTab?.setAttribute('tabindex', '-1');
 
     let index = Array.prototype.indexOf.call(this.tabsBtns, newTab);
     let oldIndex = Array.prototype.indexOf.call(this.tabsBtns, oldTab);
 
-    this.tabsPanels[oldIndex].classList.remove('tabs__panel--active');
+    this.tabsPanels[oldIndex]?.classList.remove('tabs__panel--active');
     this.tabsPanels[index].classList.add('tabs__panel--active');
 
-    this.tabsBtns[oldIndex].classList.remove('tabs__nav-btn--active');
+    this.tabsBtns[oldIndex]?.classList.remove('tabs__nav-btn--active');
     this.tabsBtns[index].classList.add('tabs__nav-btn--active');
 
     this.options.isChanged(this);
